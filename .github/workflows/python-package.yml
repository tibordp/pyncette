name: Python package
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment:
          - python-version: 3.8
            toxenv: check
          - python-version: 3.8
            toxenv: docs
          - python-version: 3.8
            toxenv: py38
          - python-version: 3.7
            toxenv: py37    
          - python-version: 3.9
            toxenv: py39    
          - python-version: 3.10
            toxenv: py310                
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.environment['python-version'] }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.environment['python-version'] }}
    - name: Install tox
      run: |
        python -m pip install --upgrade pip
        pip install tox
    - name: Run Tox
      env:
        TOXENV: ${{ matrix.environment['toxenv'] }}
      run: |
        python -m tox
  integration:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment:
          - python-version: 3.9
            toxenv: integration
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432    
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
      localstack:
        image: localstack/localstack
        env:
          SERVICES: dynamodb
        ports:
          - 4566:4566
        options: >-
          --health-cmd "curl -fso /dev/null http://localhost:4566/health"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      mysql:
        image: mysql
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: "1"
          MYSQL_DATABASE: pyncette
          MYSQL_USER: pyncette
          MYSQL_PASSWORD: password
        options: >-
          --health-cmd "mysqladmin ping --silent"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 3306:3306              

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.environment['python-version'] }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.environment['python-version'] }}
    - name: Install tox
      run: |
        python -m pip install --upgrade pip
        pip install tox
    - name: Run Tox
      env:
        POSTGRES_URL: postgres://postgres:postgres@localhost/postgres
        TOXENV: ${{ matrix.environment['toxenv'] }}
        AWS_ACCESS_KEY_ID: "foobar"
        AWS_SECRET_ACCESS_KEY: "foobar"
      run: |
        python -m tox
    - name: "Upload coverage to Codecov"
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: true        
