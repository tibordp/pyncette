[testenv:bootstrap]
deps =
    jinja2
    matrix
    tox
skip_install = true
commands =
    python ci/bootstrap.py --no-env
passenv =
    *

[tox]
envlist =
    clean,
    check,
    docs,
    {py38,py39,py310,py311},
    integration,
    report
ignore_basepython_conflict = true

[testenv]
basepython =
    py37: {env:TOXPYTHON:python3.7}
    py38: {env:TOXPYTHON:python3.8}
    py39: {env:TOXPYTHON:python3.9}
    py310: {env:TOXPYTHON:python3.10}
    py311: {env:TOXPYTHON:python3.11}
    {integration,docs}: {env:TOXPYTHON:python3}
    {bootstrap,clean,check,report}: {env:TOXPYTHON:python3}
setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes
passenv =
    *
usedevelop = false
deps =
    pytest
    pytest-asyncio
    pytest-cov
extras =
    all
commands =
    {posargs:pytest --cov --cov-report=term-missing -vv -m "not integration" --backend=default tests }
    coverage xml

[testenv:integration]
commands =
    {posargs:pytest --cov --cov-report=term-missing  -vv tests}
    coverage xml
setenv =
    SQLITE_DATABASE={envdir}/pyncette.db

[testenv:check]
deps =
    docutils
    pre-commit
    readme-renderer
    pygments
    isort
    setuptools-scm
    mypy
    types-python-dateutil
    types-croniter
    types-PyMySQL
    types-redis
skip_install = true
commands =
    python setup.py check --strict --metadata --restructuredtext
    pre-commit run --all-files --show-diff-on-failure
    mypy src examples

[testenv:docs]
usedevelop = true
deps =
    -r{toxinidir}/docs/requirements.txt
commands =
    sphinx-build {posargs:-E} -b html docs dist/docs
    sphinx-build -b linkcheck docs dist/docs

[testenv:report]
deps = coverage
skip_install = true
commands =
    coverage report
    coverage html

[testenv:clean]
commands = coverage erase
skip_install = true
deps = coverage
